<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack">
        <config key="Variable_0">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="size-of-range"/>
            <entry key="class" type="xstring" value="INTEGER"/>
            <entry key="value" type="xint" value="66"/>
        </config>
        <config key="Variable_1">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="ascending"/>
            <entry key="class" type="xstring" value="INTEGER"/>
            <entry key="value" type="xint" value="1"/>
        </config>
    </config>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <config key="expressions">
            <config key="element 0">
                <entry key="expression" type="xstring" value="if (variable(&quot;mode (index)&quot;) == 0) {%%00010    if (variable(&quot;start-value&quot;) &lt; variable(&quot;last-value&quot;)) {%%00010        variable(&quot;last-value&quot;)-variable(&quot;start-value&quot;)+1 %%00010    } else if (variable(&quot;start-value&quot;) &gt; variable(&quot;last-value&quot;)) {%%00010        variable(&quot;start-value&quot;)-variable(&quot;last-value&quot;)+1%%00010    } else {%%00010        1%%00010    }   %%00010} else if (variable(&quot;mode (index)&quot;) == 1) {%%00010    variable(&quot;size-of-range&quot;)%%00010} else if (variable(&quot;mode (index)&quot;) == 2) {%%00010    if (variable(&quot;start-value&quot;) &lt; variable(&quot;last-value&quot;)) {%%00010        min(variable(&quot;last-value&quot;)-variable(&quot;start-value&quot;)+1, variable(&quot;size-of-range&quot;)) %%00010    } else if (variable(&quot;start-value&quot;) &gt; variable(&quot;last-value&quot;)) {%%00010        min(variable(&quot;start-value&quot;)-variable(&quot;last-value&quot;)+1, variable(&quot;size-of-range&quot;)) %%00010    } else {%%00010        1%%00010    }   %%00010}%%00010"/>
                <entry key="outputName" type="xstring" value="size-of-range"/>
                <entry key="outputType" type="xstring" value="INTEGER"/>
                <entry key="replaceVariable" type="xboolean" value="true"/>
            </config>
            <config key="element 1">
                <entry key="expression" type="xstring" value="if (variable(&quot;mode (index)&quot;) == 0) {%%00010    if (variable(&quot;start-value&quot;) &lt; variable(&quot;last-value&quot;)) {%%00010        1%%00010    } else if (variable(&quot;start-value&quot;) &gt; variable(&quot;last-value&quot;)) {%%00010        -1%%00010    } else {%%00010        1%%00010    }     %%00010} else if (variable(&quot;mode (index)&quot;) == 1) {%%00010    if (variable(&quot;ascending (index)&quot;) == 0) {%%00010        1%%00010    } else if (variable(&quot;ascending (index)&quot;) == 1) {%%00010        -1%%00010    }%%00010} else if (variable(&quot;mode (index)&quot;) == 2) {%%00010    if (variable(&quot;start-value&quot;) &lt; variable(&quot;last-value&quot;)) {%%00010        1%%00010    } else if (variable(&quot;start-value&quot;) &gt; variable(&quot;last-value&quot;)) {%%00010        -1%%00010    } else {%%00010        1%%00010    }%%00010}"/>
                <entry key="outputName" type="xstring" value="ascending"/>
                <entry key="outputType" type="xstring" value="INTEGER"/>
                <entry key="replaceVariable" type="xboolean" value="true"/>
            </config>
        </config>
        <entry key="count" type="xint" value="2"/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value=""/>
        <entry key="contentType" type="xstring" value="text/plain"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="373"/>
        <entry key="y-coordinate" type="xint" value="422"/>
        <entry key="width" type="xint" value="106"/>
        <entry key="height" type="xint" value="15"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.expressions.base.node.variableexpression.VariableExpressionsNodeFactory"/>
    <entry key="node-name" type="xstring" value="Variable Expressions"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Expression Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.expressions.base"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="5.3.0.v202405071532"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Column Expressions (Labs)"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.expressions.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="5.3.0.v202406200655"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Variable Expressions"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObjectSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.port.flowvariable.FlowVariablePortObject"/>
            <entry key="port_object_summary" type="xstring" value="Variables connection"/>
            <entry key="port_spec_location" type="xstring" value="spec/spec.zip"/>
            <entry key="port_object_location" type="xstring" value="object/portobject.zip"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="ddbd81ab-4a28-488e-863a-a5ee4091b9d6"/>
    </config>
</config>
